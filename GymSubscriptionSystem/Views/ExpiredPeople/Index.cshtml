@{
    ViewData["Title"] = "Expired People";
}

@model ExpiredPeopleViewModel

<div>
    <div class="row">
        <div class="col-6">
            <h1>Expired People</h1>
            <p>List of people whose subscriptions have expired.</p>
            <p>Click on the "Delete" button to remove a person from the list.</p>
            <p>Note: This action is irreversible.</p>
        </div>
        <div class="col-6 d-flex flex-column justify-content-center align-items-center">
            <form method="POST" asp-action="Index" asp-controller="ExpiredPeople">
                <select class="form-select mb-3" name="monthSelect" id="monthSelectId" onchange="this.form.submit()">
                    <option value="1" selected="@(Model.MonthSelect == 1)">1 Month ago</option>
                    <option value="2" selected="@(Model.MonthSelect == 2)">2 Months ago</option>
                    <option value="3" selected="@(Model.MonthSelect == 3)">3 Months ago</option>
                    <option value="6" selected="@(Model.MonthSelect == 6)">6 Months ago</option>
                </select>
            </form>
            <form asp-action="DeleteAllCustomers" asp-controller="ExpiredPeople" method="POST" onsubmit="return false;" id="deleteAllForm">
                <input type="hidden" name="selectedIds" value="@Model.SelectedIds" />
                <button id="submitBtn" type="submit" class="btn btn-danger">Delete All</button>
            </form>

        </div>

    </div>
    <table class="table">
        <thead>
            <tr>
                <th class="text-center">Name</th>
                <th class="text-center">Gender</th>
                <th class="text-center">Subscription End Date</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in Model.ExpiredPeople)
            {
                <tr>
                    <td class="text-center">@person.Name</td>
                    <td class="text-center">@person.Gender</td>
                    <td class="text-center">@person.SubscriptionExpiresAt.ToShortDateString()</td>
                    <td class="text-center">
                        <form asp-action="DeleteCustomer" asp-controller="ExpiredPeople" method="post" onsubmit="return false;">
                            <input type="hidden" name="customerId" value="@person.Id" />
                            <button onclick="click_Delete(this)" type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@await Html.PartialAsync("_ConfirmModal")


@section Scripts {
    <script>

        // With two buttons that brings up the modal you need to specify the form to submit
        let formToSubmit;

        document.addEventListener('DOMContentLoaded', function () {
            const submitBtn = document.getElementById('submitBtn');
            const confirmBtn = document.getElementById('confirmBtn');
            const deleteAllForm = document.getElementById('deleteAllForm'); 

            submitBtn.addEventListener('click', function () {
                formToSubmit = deleteAllForm; //You can set the form to submit here in this case will be the deleteAllForm
                var myModal = new bootstrap.Modal(document.getElementById('confirmModal'));
                myModal.show();
            });

            confirmBtn.addEventListener('click', function () {
                if (formToSubmit) {
                    formToSubmit.submit();
                }
            });
        });

        function click_Delete(btn) {
            formToSubmit = btn.closest('form') //You set the form to submit here in this case will be the form that contains the delete button that you purchase
            var myModal = new bootstrap.Modal(document.getElementById('confirmModal'));
            myModal.show();
        }
    </script>
}